services:
  synapse:
    image: matrixdotorg/synapse:latest
    container_name: synapse
    restart: unless-stopped
    environment:
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
    volumes:
      - /opt/synapse/data:/data
    ports:
      - "8008:8008"
      - "8448:8448"
    depends_on:
      - db
      - redis
    networks:
      - synapse-network

  # Generic worker for handling client API requests
  synapse-generic-worker-1:
    image: matrixdotorg/synapse:latest
    container_name: synapse-generic-worker-1
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/generic-worker-1.yaml"]
    volumes:
      - /opt/synapse/data:/data
    environment:
      - SYNAPSE_WORKER=synapse.app.generic_worker
    ports:
      - "8081:8081"
    depends_on:
      - synapse
    networks:
      - synapse-network
    healthcheck:
      test: ["CMD-SHELL", "curl -fSs http://localhost:8081/health || exit 1"]
      start_period: "30s"
      interval: "30s"
      timeout: "10s"

  # Federation sender worker
  synapse-federation-sender:
    image: matrixdotorg/synapse:latest
    container_name: synapse-federation-sender
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/federation-sender.yaml"]
    volumes:
      - /opt/synapse/data:/data
    environment:
      - SYNAPSE_WORKER=synapse.app.federation_sender
    depends_on:
      - synapse
    networks:
      - synapse-network

  # Media repository worker
  synapse-media-repository:
    image: matrixdotorg/synapse:latest
    container_name: synapse-media-repository
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/media-repository.yaml"]
    volumes:
      - /opt/synapse/data:/data
      - /opt/synapse/media:/data/media_store
    environment:
      - SYNAPSE_WORKER=synapse.app.media_repository
    ports:
      - "8083:8083"
    depends_on:
      - synapse
    networks:
      - synapse-network
    healthcheck:
      test: ["CMD-SHELL", "curl -fSs http://localhost:8083/health || exit 1"]
      start_period: "30s"
      interval: "30s"
      timeout: "10s"

  db:
    image: postgres:15-alpine
    container_name: synapse-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=synapse_user
      - POSTGRES_PASSWORD=SynapseSecure2024!
      - POSTGRES_DB=synapse
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - /opt/synapse/postgres:/var/lib/postgresql/data
    networks:
      - synapse-network

  redis:
    image: redis:7-alpine
    container_name: synapse-redis
    restart: unless-stopped
    command: redis-server --requirepass RedisSecure2024! --appendonly yes
    volumes:
      - /opt/synapse/redis:/data
    networks:
      - synapse-network

  # Nginx reverse proxy for load balancing
  nginx:
    image: nginx:alpine
    container_name: synapse-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - synapse
      - synapse-generic-worker-1
      - synapse-media-repository
    networks:
      - synapse-network

networks:
  synapse-network:
    driver: bridge
